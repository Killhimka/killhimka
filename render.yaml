# render.yaml

services:
  - type: web
    name: killhimka-app
    repo: https://github.com/Killhimka/killhimka.git
    branch: master # Или 'main', если ваша основная ветка называется иначе

    # Поскольку Render не имеет прямого 'runtime: java', мы используем Docker.
    # buildCommand и startCommand здесь могут быть проигнорированы Render,
    # так как вся логика сборки и запуска описана в Dockerfile.
    # Но для ясности, можно указать команды, которые Dockerfile будет выполнять.
    buildCommand: "echo 'Build step handled by Dockerfile'"
    startCommand: "echo 'Start step handled by Dockerfile'"

    # Переменные окружения
    envVars:
      # Указываем версию Java, которая должна быть установлена внутри Docker-образа
      - key: JAVA_VERSION
        value: "17" # Убедитесь, что это соответствует вашей настройке в build.gradle.kts

      # Настройки базы данных PostgreSQL, полученные из Render
      # Spring Boot автоматически прочитает их, если они имеют стандартные имена
      # или если мы их явно настроим в application.yaml/properties
      - key: SPRING_DATASOURCE_DRIVER_CLASS_NAME
        value: "org.postgresql.Driver"
      - key: SPRING_DATASOURCE_URL
        value: "jdbc:postgresql://postgresql://dpg-d2kvp03ipnbc73fm44lg-a.oregon-postgres.render.com:5432/killhimka"
      - key: SPRING_DATASOURCE_USERNAME
        value: "database_killhimka_user"
      - key: SPRING_DATASOURCE_PASSWORD
        value: "FmvggcOyEH12f3DMOrqDMRck4Ls2YbXd"

      # Hibernate properties (они будут переопределять настройки из application.yaml)
      # Можно явно указать, если нужно, но Spring Boot обычно читает их из dataSource.*
      # - key: SPRING_JPA_DATABASE_PLATFORM
      #   value: "org.hibernate.dialect.PostgreSQLDialect"
      # - key: SPRING_JPA_HIBERNATE_DDL_AUTO
      #   value: "update"
      # - key: SPRING_JPA_SHOW_SQL
      #   value: "true"
      # - key: SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL
      #   value: "true"

      # Переопределение порта сервера, если Render его не назначает автоматически
      # Render обычно назначает порт через переменную окружения PORT.
      # Spring Boot по умолчанию использует ее. Если вы хотите явно указать 8085:
      # - key: SERVER_PORT
      #   value: "8085"